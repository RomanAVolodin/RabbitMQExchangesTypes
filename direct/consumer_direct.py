import sys

from pika import BlockingConnection, ConnectionParameters, PlainCredentials
from pika.adapters.blocking_connection import BlockingChannel
from pika.exchange_type import ExchangeType
from pika.spec import BasicProperties, Basic

EXCHANGE_NAME = 'direct_logs'


def handler(ch: BlockingChannel, method: Basic.Deliver, properties: BasicProperties, body: bytes) -> None:
    print(f'[üéâ] –ü–æ–ª—É—á–µ–Ω–æ: {body.decode()}')


if __name__ == '__main__':
    credentials = PlainCredentials('user', 'password')
    connection = BlockingConnection(ConnectionParameters(host='localhost', credentials=credentials))
    channel = connection.channel()

    channel.exchange_declare(exchange=EXCHANGE_NAME, exchange_type=ExchangeType.direct)
    queue = channel.queue_declare(queue='', exclusive=True)
    # –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, –≤—ã—à–µ –º—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∏–º—è –æ—á–µ—Ä–µ–¥–∏, –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –∏–º—è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    # –∏ –±—É–¥–µ—Ç –∏–º–µ—Ç—å –≤–∏–¥ amq.gen-fxDXeobOVBDZTpWfVM6iDA
    queue_name = queue.method.queue

    # –ø–æ–ª—É—á–∏–º –Ω—É–∂–Ω—ã–µ –∫–ª—é—á–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    routing_keys = sys.argv[1:] or ['error', 'warning', 'info']
    for key in routing_keys:
        channel.queue_bind(exchange=EXCHANGE_NAME, queue=queue_name, routing_key=key)

    channel.basic_consume(queue=queue_name, on_message_callback=handler, auto_ack=True)
    channel.start_consuming()
